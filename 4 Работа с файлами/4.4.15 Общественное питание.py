# –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ üò•
# –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Ñ–∞–π–ª food_services.json, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ø–∏—Å–æ–∫ JSON-–æ–±—ä–µ–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö
# –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è:
#
# [
#    {
#       "Name": "–°–ú–ï–¢–ê–ù–ê",
#       "IsNetObject": "–Ω–µ—Ç",
#       "OperatingCompany": "",
#       "TypeObject": "–∫–∞—Ñ–µ",
#       "AdmArea": "–°–µ–≤–µ—Ä–æ-–í–æ—Å—Ç–æ—á–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –æ–∫—Ä—É–≥",
#       "District": "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω",
#       "Address": "–≥–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞, —É–ª–∏—Ü–∞ –ï–≥–æ—Ä–∞ –ê–±–∞–∫—É–º–æ–≤–∞, –¥–æ–º 9",
#       "SeatsCount": 48
#    },
#    ...
# ]
# –ü–æ–¥ ¬´–∑–∞–≤–µ–¥–µ–Ω–∏–µ–º¬ª –±—É–¥–µ–º –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—Ç—å –æ–¥–∏–Ω JSON-–æ–±—ä–µ–∫—Ç –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞. –£ –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏–º–µ—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã:
#
# Name ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ
# IsNetObject ‚Äî –¥–∞\–Ω–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–µ —Å–µ—Ç–µ–≤—ã–º
# OperatingCompany ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ç–∏
# TypeObject ‚Äî –≤–∏–¥ (–∫–∞—Ñ–µ, —Å—Ç–æ–ª–æ–≤–∞—è, —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∏ —Ç.–¥.)
# AdmArea ‚Äî –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∑–æ–Ω–∞
# District ‚Äî —Ä–∞–π–æ–Ω
# Address ‚Äî –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å
# SeatsCount ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è:
#
# –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞–π–æ–Ω –ú–æ—Å–∫–≤—ã, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π, –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ —Ä–∞–π–æ–Ω–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
# –∑–∞–≤–µ–¥–µ–Ω–∏–π –≤ –Ω–µ–º
# –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–µ—Ç—å —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–π –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–π —Å–µ—Ç–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π —ç—Ç–æ–π —Å–µ—Ç–∏
# –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:
#
# <—Ä–∞–π–æ–Ω>: <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π>
# <–Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ç–∏>: <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π>

import json

with open('food_services.json', encoding='UTF-8') as file_in:
    data = json.load(file_in)
    dist = {}
    comp = {}
    for row in data:
        dist[row['District']] = dist.get(row['District'], 0) + 1
        if row['OperatingCompany']:
            comp[row['OperatingCompany']] = comp.get(row['OperatingCompany'], 0) + 1
    print(*max(dist.items(), key=lambda x: int(x[1])), sep=": ")
    print(*max(comp.items(), key=lambda x: int(x[1])), sep=": ")
